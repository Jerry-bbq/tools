/**
 * @constant {RegExp} MOBILE_REGEXP - 正则表达式用于验证中国大陆手机号码的有效性。
 * 根据中国手机号码的编码规则，有效手机号码必须满足以下条件：
 * - 以13、14、15、16、17、18或19开头
 * - 第二位到第四位可以是0-9之间的任意数字，具体号码段根据不同运营商分配
 * - 后八位是任意数字（0-9）
 * - 整个手机号码长度为11位

 * 该正则表达式主要用于在应用程序中验证用户输入的中国大陆手机号码格式是否正确。
 */
export const MOBILE_REGEXP = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\d{8}$/;

/**
 * @constant {RegExp} EMAIL_REGEXP - 正则表达式用于验证电子邮件地址的有效性。
 * 根据RFC 5322标准简化版，有效电子邮件地址的结构应该满足以下条件：
 * - 必须包含 "@" 符号分隔用户名和域名部分
 * - 用户名部分可以包含字母（大小写不限）、数字、点（.）、下划线（_）和减号（-）
 * - 域名部分由一系列以点（.）分隔的部分组成，每个部分只能包含字母（大小写不限）、数字和减号（-）
 * - 整个域名部分至少包含两个点（.），并且最后一部分至少有2个至6个字母或数字
 *
 * 该正则表达式主要用于在应用程序中验证用户输入的电子邮件地址格式是否正确。
 */
export const EMAIL_REGEXP = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}$/;

/**
 * @constant {RegExp} ACCOUNT_REGEXP - 正则表达式用于验证账户名字符串的有效性。
 * 账户名仅允许包含以下字符：
 * - 下划线（_）
 * - 横杠（-）
 * - 点号（全/半角·和•）
 * - 英文字母（大小写不限）
 * - 数字（0-9）
 *
 * 这个正则表达式被用来校验和约束用户输入的账户名格式，确保它们符合预定义的规则。
 */
export const ACCOUNT_REGEXP = /^[_\-·•a-zA-Z0-9]+$/;

/**
 * @constant {RegExp} NAME_REGEXP - 正则表达式用于验证名称字符串的有效性。
 * 名称字符串可以包含以下字符：
 * - 中文汉字
 * - 下划线（_）
 * - 横杠（-）
 * - 点号（全/半角·和•）
 * - 英文字母（大小写不限）
 * - 数字（0-9）
 *
 * 该正则表达式通常用于确保名称字段遵循特定的格式规范。
 */
export const NAME_REGEXP = /^[\u4e00-\u9fa5_\-·•a-zA-Z0-9]+$/;

/**
 * @constant {RegExp} WORDS_LIMIT - 正则表达式用于验证字符串的有效性，限制长度在2到50个字符之间（包括字母、数字、符号等所有Unicode字符）。
 *
 * 该正则表达式检查一个字符串是否至少包含2个字符且最多包含50个字符。它通常用于确保用户输入的诸如用户名、昵称或其他简短文本字段不为空且长度适中。
 */
export const WORDS_LIMIT = /^.{2,50}$/;
